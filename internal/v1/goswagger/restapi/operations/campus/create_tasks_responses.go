// Code generated by go-swagger; DO NOT EDIT.

package campus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gmarcha/notion-goswagger-api/internal/v1/goswagger/models"
)

// CreateTasksCreatedCode is the HTTP code returned for type CreateTasksCreated
const CreateTasksCreatedCode int = 201

/*
CreateTasksCreated Created

swagger:response createTasksCreated
*/
type CreateTasksCreated struct {

	/*
	  In: Body
	*/
	Payload []*models.Task `json:"body,omitempty"`
}

// NewCreateTasksCreated creates CreateTasksCreated with default headers values
func NewCreateTasksCreated() *CreateTasksCreated {

	return &CreateTasksCreated{}
}

// WithPayload adds the payload to the create tasks created response
func (o *CreateTasksCreated) WithPayload(payload []*models.Task) *CreateTasksCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create tasks created response
func (o *CreateTasksCreated) SetPayload(payload []*models.Task) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTasksCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Task, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// CreateTasksInternalServerErrorCode is the HTTP code returned for type CreateTasksInternalServerError
const CreateTasksInternalServerErrorCode int = 500

/*
CreateTasksInternalServerError Internal Server Error

swagger:response createTasksInternalServerError
*/
type CreateTasksInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateTasksInternalServerError creates CreateTasksInternalServerError with default headers values
func NewCreateTasksInternalServerError() *CreateTasksInternalServerError {

	return &CreateTasksInternalServerError{}
}

// WithPayload adds the payload to the create tasks internal server error response
func (o *CreateTasksInternalServerError) WithPayload(payload *models.Error) *CreateTasksInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create tasks internal server error response
func (o *CreateTasksInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTasksInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
