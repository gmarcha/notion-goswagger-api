// Code generated by go-swagger; DO NOT EDIT.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gmarcha/notion-goswagger-api/internal/v1/goswagger/models"
)

// PoolCreateCreatedCode is the HTTP code returned for type PoolCreateCreated
const PoolCreateCreatedCode int = 201

/*
PoolCreateCreated Created

swagger:response poolCreateCreated
*/
type PoolCreateCreated struct {

	/*
	  In: Body
	*/
	Payload []*models.Task `json:"body,omitempty"`
}

// NewPoolCreateCreated creates PoolCreateCreated with default headers values
func NewPoolCreateCreated() *PoolCreateCreated {

	return &PoolCreateCreated{}
}

// WithPayload adds the payload to the pool create created response
func (o *PoolCreateCreated) WithPayload(payload []*models.Task) *PoolCreateCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pool create created response
func (o *PoolCreateCreated) SetPayload(payload []*models.Task) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PoolCreateCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Task, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PoolCreateInternalServerErrorCode is the HTTP code returned for type PoolCreateInternalServerError
const PoolCreateInternalServerErrorCode int = 500

/*
PoolCreateInternalServerError Internal Server Error

swagger:response poolCreateInternalServerError
*/
type PoolCreateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPoolCreateInternalServerError creates PoolCreateInternalServerError with default headers values
func NewPoolCreateInternalServerError() *PoolCreateInternalServerError {

	return &PoolCreateInternalServerError{}
}

// WithPayload adds the payload to the pool create internal server error response
func (o *PoolCreateInternalServerError) WithPayload(payload *models.Error) *PoolCreateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pool create internal server error response
func (o *PoolCreateInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PoolCreateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
