// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "An API to automate content creation on Notion.",
    "title": "Notion API",
    "contact": {},
    "version": "0.1"
  },
  "host": "api:3001",
  "basePath": "/v1",
  "paths": {
    "/campus/sync": {
      "get": {
        "description": "Synchronize shared campus page with internal databases.",
        "tags": [
          "Campus"
        ],
        "summary": "Synchronize campus page",
        "operationId": "sync",
        "responses": {
          "204": {
            "description": "No content"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/issues": {
      "post": {
        "description": "Create an issue from Jira.",
        "tags": [
          "Issue"
        ],
        "summary": "Create issue",
        "operationId": "create",
        "parameters": [
          {
            "description": "Issue content.",
            "name": "issue",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Issue"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Issue"
            }
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/issues/{id}": {
      "put": {
        "description": "Update an issue from Jira.",
        "tags": [
          "Issue"
        ],
        "summary": "Update issue",
        "operationId": "update",
        "parameters": [
          {
            "description": "Issue content.",
            "name": "issue",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Issue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Issue"
            }
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "delete": {
        "description": "Delete an issue from Jira.",
        "tags": [
          "Issue"
        ],
        "summary": "Delete issue",
        "operationId": "delete",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Issue ID from Jira.",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 500
        },
        "message": {
          "type": "string",
          "example": "Error message"
        }
      }
    },
    "Issue": {
      "type": "object",
      "properties": {
        "jiraIssueID": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "400": {
      "description": "Bad request",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "500": {
      "description": "Internal Server Error",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "An API to automate content creation on Notion.",
    "title": "Notion API",
    "contact": {},
    "version": "0.1"
  },
  "host": "api:3001",
  "basePath": "/v1",
  "paths": {
    "/campus/sync": {
      "get": {
        "description": "Synchronize shared campus page with internal databases.",
        "tags": [
          "Campus"
        ],
        "summary": "Synchronize campus page",
        "operationId": "sync",
        "responses": {
          "204": {
            "description": "No content"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/issues": {
      "post": {
        "description": "Create an issue from Jira.",
        "tags": [
          "Issue"
        ],
        "summary": "Create issue",
        "operationId": "create",
        "parameters": [
          {
            "description": "Issue content.",
            "name": "issue",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Issue"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Issue"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/issues/{id}": {
      "put": {
        "description": "Update an issue from Jira.",
        "tags": [
          "Issue"
        ],
        "summary": "Update issue",
        "operationId": "update",
        "parameters": [
          {
            "description": "Issue content.",
            "name": "issue",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Issue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Issue"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "Delete an issue from Jira.",
        "tags": [
          "Issue"
        ],
        "summary": "Delete issue",
        "operationId": "delete",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Issue ID from Jira.",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 500
        },
        "message": {
          "type": "string",
          "example": "Error message"
        }
      }
    },
    "Issue": {
      "type": "object",
      "properties": {
        "jiraIssueID": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "400": {
      "description": "Bad request",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "500": {
      "description": "Internal Server Error",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
}
